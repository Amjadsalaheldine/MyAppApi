using MyAppApi.Services;
using MyAppApi.Data.Dtos;  // ???? ?? ????? ??? DTO ???

var builder = WebApplication.CreateBuilder(args);

// ????? ????? Controllers
builder.Services.AddControllers();
builder.Services.AddEndpointsApiExplorer();
builder.Services.AddSwaggerGen();

// ????? ????? ???????? ???????? EF
builder.Services.AddDbContext<AppDbContext>(options =>
    options.UseSqlServer(builder.Configuration.GetConnectionString("DefaultConnection")));

// ????? Identity ???????? ApplicationUser ????? ?? IdentityUser
builder.Services.AddIdentityApiEndpoints<ApplicationUser>()
    .AddEntityFrameworkStores<AppDbContext>();

// ??????? JSON ??????? ?? ?? ReferenceHandler
builder.Services.AddControllers().AddJsonOptions(options =>
{
    options.JsonSerializerOptions.ReferenceHandler = System.Text.Json.Serialization.ReferenceHandler.Preserve;
    options.JsonSerializerOptions.WriteIndented = true;
});

// ????? ????? ??? BookingService
builder.Services.AddScoped<IBookingService, BookingService>();

var app = builder.Build();

// ????? ??? HTTP Pipeline
if (app.Environment.IsDevelopment())
{
    app.UseSwagger();
    app.UseSwaggerUI();
}

app.UseHttpsRedirection();
app.UseAuthorization();

// ????? ??? Identity API ???????? ApplicationUser
app.MapIdentityApi<ApplicationUser>();

// ????? ??? Controllers
app.MapControllers();

app.Run();
